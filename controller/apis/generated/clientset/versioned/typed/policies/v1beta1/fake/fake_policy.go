// Copyright 2025 The AuthLink Authors. All rights reserved.
// Use of this source code is governed by an Apache2
// license that can be found in the LICENSE file.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	policiesv1beta1 "github.com/goauthlink/authlink/controller/apis/generated/clientset/versioned/typed/policies/v1beta1"
	v1beta1 "github.com/goauthlink/authlink/controller/apis/policies/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakePolicies implements PolicyInterface
type fakePolicies struct {
	*gentype.FakeClientWithList[*v1beta1.Policy, *v1beta1.PolicyList]
	Fake *FakeAuthlinkV1beta1
}

func newFakePolicies(fake *FakeAuthlinkV1beta1, namespace string) policiesv1beta1.PolicyInterface {
	return &fakePolicies{
		gentype.NewFakeClientWithList[*v1beta1.Policy, *v1beta1.PolicyList](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("policies"),
			v1beta1.SchemeGroupVersion.WithKind("Policy"),
			func() *v1beta1.Policy { return &v1beta1.Policy{} },
			func() *v1beta1.PolicyList { return &v1beta1.PolicyList{} },
			func(dst, src *v1beta1.PolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.PolicyList) []*v1beta1.Policy { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.PolicyList, items []*v1beta1.Policy) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
